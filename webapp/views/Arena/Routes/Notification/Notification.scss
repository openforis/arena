@use 'sass:color';
@use '~@webapp/style/vars' as *;

$appNotificationWidth: 500px;
$appNotificationWidthSmallScreens: 90vw;

.notification {
  position: fixed;
  top: 10px;
  z-index: $zIndexAppNotification;
  width: $appNotificationWidth;
  padding: 10px;

  border: 1px solid transparent;
  border-radius: 3px;

  font-size: 0.9rem;
  font-weight: 600;
  text-align: center;

  transform: translate(calc(50vw - calc($appNotificationWidth / 2)), 15px);

  .notification-content {
    white-space: pre-wrap;
  }
}

@media screen and (max-width: 768px) {
  .notification {
    width: $appNotificationWidthSmallScreens;
    transform: translate(calc(50vw - calc($appNotificationWidthSmallScreens / 2)), 15px);
  }
}

.notification.info {
  background-color: color.adjust($blueLightActive, $lightness: 18%);
  border-color: color.adjust($blueLightActive, $lightness: 5%);
}

.notification.warning {
  background-color: color.adjust($orangeLight, $lightness: 8%);
  border-color: $orange;
}

.notification.error {
  color: $white;
  background-color: color.adjust($red, $lightness: 10%);
  border-color: $red;
}

.notification.enter-active {
  animation: notification-in 250ms ease-out;
}

.notification.exit,
.notification.exit-done {
  opacity: 0;
}

.notification.exit-active {
  animation: notification-out 250ms ease-out;
}

.notification__btn-close {
  position: absolute;
  left: 0;
  top: 0;

  &:hover {
    background-color: transparent;
  }
}

@keyframes notification-in {
  from {
    opacity: 0;
    transform: translate(calc(50vw - calc($appNotificationWidth / 2)), -15px);
  }

  to {
    opacity: 1;
    transform: translate(calc(50vw - calc($appNotificationWidth / 2)), 15px);
  }
}

@keyframes notification-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}
