@startuml

' colors:
'   level 1 : #FFCFCF
'   level 2 : #FF6F6F

' INIT
title Node Update

entity WebSocket
participant RecordService
participant RecordUpdateThread
participant RecordManager
participant RecordUpdateManager
participant NodeUpdateManager
participant NodeUpdateDependentManager
participant RecordValidationManager
participant RecordUniquenessValidator

box "Record" #f1efe6
participant Record
participant RecordValidator
participant RecordExpressionParser
end box

box "Persistence" #ece8d6
database RecordRepository
database NodeRepository
database SurveyRdbManager
end box

RecordUpdateThread ++  #yellow

RecordService --> RecordUpdateThread : postMessage

RecordUpdateThread -> RecordManager ++ : persistNode
    RecordManager -> RecordUpdateManager ++ : persistNode
        'RecordUpdateManager.persistNode

        'RecordUpdateManager._beforeNodesUpdate START
        RecordUpdateManager -> RecordUpdateManager ++ #FFCFCF: _beforeNodesUpdate
            RecordUpdateManager -> RecordValidationManager ++ : validateRecordsUniquenessAndPersistValidation,
                RecordValidationManager -> RecordUpdateManager -- :
        RecordUpdateManager -> RecordManager -- :
        'RecordUpdateManager._beforeNodesUpdate END

        RecordUpdateManager -> NodeUpdateManager ++ : persistNode
            NodeUpdateManager -> NodeRepository ++ : updateNode
                NodeRepository -> NodeUpdateManager -- : node

            NodeUpdateManager -> NodeUpdateManager ++ #FFCFCF : deleteDependentCodeNodes
                NodeUpdateManager -> NodeRepository ++ : deleteNode
                    NodeRepository -> NodeUpdateManager -- : null
                NodeUpdateManager -> NodeUpdateManager --: nodes

            NodeUpdateManager -> RecordUpdateManager -- : nodes

        'RecordUpdateManager._onNodesUpdate START
        RecordUpdateManager -> RecordUpdateManager ++ #FFCFCF: _onNodesUpdate

            RecordUpdateManager --> RecordUpdateThread ++ : nodes
                RecordUpdateThread --> WebSocket -- : notify user with nodes

            RecordUpdateManager -> NodeUpdateManager ++ : updateNodesDependents
                loop N of dependent nodes (persist node)

                '1. UPDATE APPLICABILITY
                NodeUpdateManager -> NodeUpdateDependentManager ++ #FFCFCF: updateDependentsApplicable
                    NodeUpdateDependentManager -> Record ++ : getDependentNodes
                        Record -> NodeUpdateDependentManager -- : nodes
                    NodeUpdateDependentManager -> RecordExpressionParser ++ : evalApplicableExpression
                        RecordExpressionParser -> NodeUpdateDependentManager -- : expressionEvaluated
                    NodeUpdateDependentManager -> NodeRepository ++ : updateChildrenApplicability
                        NodeRepository -> NodeUpdateDependentManager -- : nodes
                    NodeUpdateDependentManager -> NodeUpdateManager -- : nodes

                 '2. UPDATE DEFAULT VALUE
                 NodeUpdateManager -> NodeUpdateDependentManager ++ #FFCFCF : updateDependentsDefaultValues
                     NodeUpdateDependentManager -> Record ++ : getDependentNodes
                         Record -> NodeUpdateDependentManager -- : nodes
                     NodeUpdateDependentManager -> RecordExpressionParser ++ : evalApplicableExpression
                         RecordExpressionParser -> NodeUpdateDependentManager -- : expressionEvaluated
                     NodeUpdateDependentManager -> NodeUpdateDependentManager ++ #FF6F6F: toNodeValue
                         NodeUpdateDependentManager -> NodeUpdateDependentManager -- : nodeValue
                     NodeUpdateDependentManager -> NodeRepository ++ : updateNode
                         NodeRepository -> NodeUpdateDependentManager -- : node
                     NodeUpdateDependentManager -> NodeUpdateManager -- : nodes

                end
                NodeUpdateManager -> RecordUpdateManager -- : nodes

            RecordUpdateManager --> RecordUpdateThread ++ : nodes
                RecordUpdateThread --> WebSocket -- : notify user with nodes

            '3. UPDATE Validation
            RecordUpdateManager -> RecordValidationManager ++ : validateNodesAndPersistValidation

                '3.1 validate record nodes
                RecordValidationManager -> RecordValidator ++ : validateNodes
                    RecordValidator -> RecordValidationManager -- : validations


                '3.2 validate record uniqueness
                RecordValidationManager -> RecordUniquenessValidator ++ : validateRecordKeysUniqueness
                    RecordUniquenessValidator -> SurveyRdbManager ++ : countDuplicateRecords
                        SurveyRdbManager -> RecordUniquenessValidator -- : count
                    RecordUniquenessValidator -> RecordValidationManager  -- : validation


                '3.3 persistValidation
                RecordValidationManager -> RecordValidationManager ++ #FFCFCF : persistValidation
                    RecordValidationManager -> RecordRepository ++ : updateValidation
                        RecordRepository -> RecordValidationManager -- :
                    RecordValidationManager -> RecordValidationManager -- :

                RecordValidationManager -> RecordUpdateManager -- : validations

            RecordUpdateManager --> RecordUpdateThread ++ : validations
                RecordUpdateThread --> WebSocket -- : notify user with validations

            RecordUpdateManager -> SurveyRdbManager ++ : updateTableNodes
                SurveyRdbManager -> RecordUpdateManager -- :

        RecordUpdateManager -> RecordUpdateManager -- : record
        'RecordUpdateManager._onNodesUpdate END

        'RecordUpdateManager._afterNodesUpdate START
        RecordUpdateManager -> RecordUpdateManager ++ #FFCFCF: _afterNodesUpdate
            RecordUpdateManager -> RecordValidationManager ++ : validateRecordsUniquenessAndPersistValidation,
                RecordValidationManager -> RecordUpdateManager -- :
        RecordUpdateManager -> RecordManager -- :
        'RecordUpdateManager._afterNodesUpdate END

    RecordUpdateManager -> RecordManager -- : record
RecordManager -> RecordUpdateThread -- : record


@enduml